# docker-compose.yml

version: '3'

services:
  postgres:
    image: postgres
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      # When the PostgresSQL container is started it will run any scripts
      # provided in the `docker-entrypoint-initdb.d` directory
      - ./database-seed.sql:/docker-entrypoint-initdb.d/database-seed.sql

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile  # Specify the Dockerfile for backend
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASSWORD: root
    volumes:
      - ./backend:/app  # Mount the local backend directory into the container
      - /app/node_modules
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile  # Specify the Dockerfile for backend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app  # Mount the local backend directory into the container
      - /app/node_modules
    depends_on:
      - backend